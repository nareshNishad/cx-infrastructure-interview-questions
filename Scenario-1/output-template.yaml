AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: ECS Infrastructure assignment 
Parameters:
  pFunctionAliasName:
    Description: Function Alias Name.
    Type: String
    Default: lambdaFunction
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  pArtifactS3BucketName:
    Description: Artifact S3 Bucket Name.
    Type: String
    Default: assignment-scenario
  pArtifactS3Key:
    Description: Enter the parameter name for the stored Artifact S3 Key.
    Type: String
    Default: lambda.zip
  pLogLevel:
    Description: Enter the log level for the lambda function.
    Type: String
    Default: DEBUG
    AllowedValues:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      - CRITICAL

Resources:
  rLambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: lambda-function-role
      Path: /
      Policies:
        - PolicyName: allow-logging
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'

  rLambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      AutoPublishAlias: !Ref pFunctionAliasName
      Handler: lambda.handler
      Runtime: python3.8
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLogLevel
      CodeUri:
        Bucket: !Ref pArtifactS3BucketName
        Key: !Ref pArtifactS3Key
      Role: !GetAtt rLambdaFunctionRole.Arn
      DeploymentPreference:
        Type: AllAtOnce
      #No such property Alarms associated with AWS::Serverless::Function
      # Alarms:
      #  - !Ref rLambdaFunctionAliasErrorAlarm
      #  - !Ref rLambdaFunctionVersionErrorAlarm

  rLambdaFunctionAliasErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub '${rLambdaFunction}:${pFunctionAliasName}'
        - Name: FunctionName
          Value: !Ref rLambdaFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 0

  rLambdaFunctionVersionErrorAlarm:
    Type: 'AWS::CloudWatch::Alarm'
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !GetAtt rLambdaFunction.Arn
        - Name: FunctionName
          Value: !Ref rLambdaFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 300
      Statistic: Sum
      Threshold: 0
Outputs:
  oLambdaFunctionName:
    Description: Name of the Lambda Function
    Value: !Ref rLambdaFunction
